ECS access RDS
https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-tutorial.html

{
  "containerDefinitions": [{
    "secrets": [{
      "name": "environment_variable_name",
      "valueFrom": "arn:aws:secretsmanager:region:aws_account_id:secret:secret_name-AbCdEf"
    }]
  }]
}
{
  "containerDefinitions": [{
    "secrets": [{
      "name": "environment_variable_name",
      "valueFrom": "arn:aws:ssm:region:aws_account_id:parameter/parameter_name"
    }]
  }]
}
{
  "containerDefinitions": [{
    "logConfiguration": [{
      "logDriver": "splunk",
      "options": {
        "splunk-url": "https://cloud.splunk.com:8080"
      },
      "secretOptions": [{
        "name": "splunk-token",
        "valueFrom": "arn:aws:secretsmanager:region:aws_account_id:secret:secret_name-AbCdEf"
      }]
    }]
  }]
}

Task Definition
  Task Definition Name (Family name)
  Task Role (IAM -> AWS service RDS)
  Network Mode (bridge, host, awsvpc, none)
  Task excecution role ( (pull image, publish container log -> CloudWatch)
  Task size (Mem/CPU)
  Constraint (Task Placement)
  Service Integraion (Enable App Mesh integration)
  Log Router Integration (FireLens for ECS)
  Volume
  
  Add Container 
     Image   
     Mem (Hard limit, Soft limit)
     Port mappting 
     HealthCheck (command-curl, interval, timeout, start perirod, retries)
     Environment (CPU units, GPU, Essential, EntryPoint, Command, workdir, env vars)
     Container Timeout (start timeout, stop timeout)
     Network Settings ( disable networking, links, hostname, DNS servers, DNS search domain)
     Storage and Logging (mount point, log config -> awslog/jasonfile)
     Security (privileged, user)
     Resource Limit (CPU, Core, filesize, locks)
     Docker labels
     
     
appspec.yml for ECS

version: 0.0
Resources:
  - TargetService:
      Type: AWS::ECS::Service
      Properties:
        TaskDefinition: "arn:aws:ecs:us-east-1:111222333444:task-definition/my-task-definition-family-name:1"
        LoadBalancerInfo:
          ContainerName: "SampleApplicationName"
          ContainerPort: 80
# Optional properties
        PlatformVersion: "LATEST"
        NetworkConfiguration:
          AwsvpcConfiguration:
            Subnets: ["subnet-1234abcd","subnet-5678abcd"]
            SecurityGroups: ["sg-12345678"]
            AssignPublicIp: "ENABLED"
Hooks:
  - BeforeInstall: "LambdaFunctionToValidateBeforeInstall"
  - AfterInstall: "LambdaFunctionToValidateAfterTraffic"
  - AfterAllowTestTraffic: "LambdaFunctionToValidateAfterTestTrafficStarts"
  - BeforeAllowTraffic: "LambdaFunctionToValidateBeforeAllowingProductionTraffic"
  - AfterAllowTraffic: "LambdaFunctionToValidateAfterAllowingProductionTraffic"
     
     
  
  
  
  
